#!perl

use strict; use warnings;
use Games::TicTacToe;

$|=1;

$SIG{'INT'} = sub { print {*STDOUT} "\n\nCaught Interrupt (^C), Aborting\n"; exit(1); };

my $tictactoe = Games::TicTacToe->new;

my ($size);
do {
    print {*STDOUT} "Please enter game board size (type 3 if you want 3x3): ";
    $size = <STDIN>;
    chomp($size);
} until ($tictactoe->isValidGameBoardSize($size));

$tictactoe->setGameBoard($size);

my ($symbol);
do {
    print {*STDOUT} "Please select the symbol [X / O]: ";
    $symbol = <STDIN>;
    chomp($symbol);
} until ($tictactoe->isValidSymbol($symbol));

$tictactoe->setPlayers($symbol);

my ($response);
do {
    print {*STDOUT} $tictactoe->getGameBoard;
    my $index = 1;
    my $board = $tictactoe->board;
    do {
        my $move = undef;
        if ($tictactoe->needNextMove) {
            my $available = $board->availableIndex;
            if ($tictactoe->isLastMove) {
                $move = $available;
            }
            else {
                do {
                    print {*STDOUT} "What is your next move [$available]? ";
                    $move = <STDIN>;
                    chomp($move);
                } until ($tictactoe->isValidMove($move));
            }
        }

        $tictactoe->play($move);

        print {*STDOUT} $tictactoe->getGameBoard
            unless (($index % 2 == 1) || $tictactoe->isGameOver);

        $index++;

    } until ($tictactoe->isGameOver);

    print {*STDOUT} $tictactoe->getResult;
    print {*STDOUT} $tictactoe->getGameBoard;

    $board->reset;

    do {
        print {*STDOUT} "Do you wish to continue (Y/N)? ";
        $response = <STDIN>;
        chomp($response);
    } until (defined $response && ($response =~ /^[Y|N]$/i));

} until ($response =~ /^N$/i);

print {*STDOUT} "Thank you.\n";
